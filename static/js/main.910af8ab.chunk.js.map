{"version":3,"sources":["features/todos/todosSlice.js","features/filters/filtersSlice.js","reducers/index.js","features/filters/Filters.js","features/todos/AddTodo.js","features/todos/Todo.js","features/todos/TodoList.js","App.js","index.js"],"names":["todosSlice","createSlice","name","initialState","reducers","addTodo","reducer","state","action","push","id","v4","text","payload","completed","toggleTodo","todo","find","t","removeTodo","filter","actions","filtersSlice","setFilter","combineReducers","todos","todosReducer","filters","filtersReducer","buttons","value","Filters","dispatch","useDispatch","data-testid","className","map","onClick","AddTodo","useState","todoText","setTodoText","onChange","e","target","placeholder","Todo","type","checked","TodoList","useSelector","getTodosByFilter","i","store","configureStore","rootReducer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.910af8ab.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { v4 } from 'uuid';\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState: [],\n  reducers: {\n    addTodo: {\n      reducer: (state, action) => {\n        state.push({ id: v4(), text: action.payload, completed: false });\n      },\n    },\n    toggleTodo: {\n      reducer: (state, action) => {\n        const todo = state.find((t) => t.id === action.payload);\n        if (todo) {\n          todo.completed = !todo.completed;\n        }\n      },\n    },\n    removeTodo: {\n      reducer: (state, action) => {\n        return state.filter((t) => t.id !== action.payload);\n      },\n    },\n  },\n});\n\nexport const { addTodo, toggleTodo, removeTodo } = todosSlice.actions;\n\nexport default todosSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filtersSlice = createSlice({\n  name: 'filters',\n  initialState: 'all',\n  reducers: {\n    setFilter(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setFilter } = filtersSlice.actions;\n\nexport default filtersSlice.reducer;\n","import { combineReducers } from 'redux';\nimport todosReducer from '../features/todos/todosSlice';\nimport filtersReducer from '../features/filters/filtersSlice';\n\nexport default combineReducers({\n  todos: todosReducer,\n  filters: filtersReducer,\n});\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from './filtersSlice';\n\nconst buttons = [\n  { name: 'All', value: 'all' },\n  { name: 'Active', value: 'active' },\n  { name: 'Completed', value: 'completed' },\n];\n\nconst Filters = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <ul data-testid=\"filters\" className=\"filters\">\n      {buttons.map(({ name, value }) => (\n        <li key={name}>\n          <button value={value} onClick={() => dispatch(setFilter(value))}>\n            {name}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Filters;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTodo } from '../../features/todos/todosSlice';\n\nconst AddTodo = () => {\n  const dispatch = useDispatch();\n\n  const [todoText, setTodoText] = useState('');\n\n  const onChange = (e) => setTodoText(e.target.value);\n\n  const onAddTodo = () => {\n    dispatch(addTodo(todoText));\n    //reset input\n    setTodoText('');\n  };\n\n  return (\n    <div className=\"add\">\n      <input\n        value={todoText}\n        onChange={onChange}\n        placeholder=\"What needs to be done today?\"\n      />\n      <button onClick={onAddTodo}>Add</button>\n    </div>\n  );\n};\n\nexport default AddTodo;\n","import { useDispatch } from 'react-redux';\nimport { BsTrash } from 'react-icons/bs';\nimport { toggleTodo, removeTodo } from '../todos/todosSlice';\n\nconst Todo = ({ todo }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={todo.completed ? 'completed' : null}>\n      <input\n        type=\"checkbox\"\n        checked={todo.completed}\n        onChange={() => dispatch(toggleTodo(todo.id))}\n      />\n      <span>{todo.text}</span>\n      <BsTrash onClick={() => dispatch(removeTodo(todo.id))} />\n    </li>\n  );\n};\n\nexport default Todo;\n","import { useSelector } from 'react-redux';\n\nimport Todo from './Todo';\n\nconst getTodosByFilter = (todos, filter) => {\n  switch (filter) {\n    case 'all':\n      return todos;\n    case 'completed':\n      return todos.filter((todo) => todo.completed);\n    case 'active':\n      return todos.filter((todo) => !todo.completed);\n    default:\n      return todos;\n  }\n};\n\nconst TodoList = () => {\n  const filter = useSelector((state) => state.filters);\n  const todos = useSelector((state) => getTodosByFilter(state.todos, filter));\n\n  return (\n    <ul data-testid=\"todoList\" className=\"todos\">\n      {todos.map((todo, i) => (\n        <Todo key={i} todo={todo} />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport './App.css';\n\nimport Filters from './features/filters/Filters';\nimport AddTodo from './features/todos/AddTodo';\nimport TodoList from './features/todos/TodoList';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <h1>todolist</h1>\n        <Filters />\n        <AddTodo />\n        <TodoList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}